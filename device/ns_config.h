#ifndef NS_CONFIG_H
#define NS_CONFIG_H

/*使用ns模块需要设置的参数，用户使用前需要先浏览本文件的相关参数
ns模块提供设备管理功能，将各种各样的设备，建立统一的模型，并基于模型，
提供更标准的，更方便的调用接口。

主要包含功能:
提供驱动管理功能，同类设备可以共用一套驱动代码
提供设备抽象功能，将设备抽象成字符设备，块设备，网络设备
提供设备无关性功能，屏蔽设备细节，用户可以使用逻辑设备而不考虑其实现
提供posix标准接口，用户可以按照posix标准接口使用设备

例如stm32中有5个串口设备，用户提供串口中断对设备的读写，然后放到ns模块
的缓冲区即可。
用户提供串口的初始化，串口的读写函数。
例如有个
<optional>
基于os kernel提供的服务，将ns模块对接到os中

驱动一个设备，我需要做什么?
1.提供中断处理函数，如不需要则不提供
2.实现硬件驱动,并注册posix_interface
3.调用interface,使用设备
*/
#ifdef __cplusplus
extern "C" {
#endif



#ifdef __cplusplus
}
#endif

#endif